name: Spring Boot CI/CD Pipeline

# K√≠ch ho·∫°t pipeline khi c√≥ code ƒë∆∞·ª£c push l√™n nh√°nh 'main'
on:
  push:
    branches:
      - main
    # B·ªè qua khi ch·ªâ c√≥ thay ƒë·ªïi trong th∆∞ m·ª•c k8s-manifests
    # v√¨ nh·ªØng thay ƒë·ªïi ƒë√≥ l√† do pipeline n√†y t·ª± commit, tr√°nh l·∫∑p v√¥ h·∫°n (loop)
    paths-ignore:
      - 'k8s-manifests/**'

# C√°c bi·∫øn m√¥i tr∆∞·ªùng (Environment Variables) chung
env:
  # T√™n image s·∫Ω ƒë∆∞·ª£c push l√™n GitHub Container Registry (GHCR)
  IMAGE_NAME: baitap-spring-mvc
  # Registry (S·ª≠ d·ª•ng GHCR - n∆°i l∆∞u tr·ªØ Docker Image c·ªßa GitHub)
  REGISTRY: ghcr.io
  # Phi√™n b·∫£n Java
  JAVA_VERSION: '17'

jobs:
  build-test-push-and-update:
    name: Build, Push Image & Update Manifest (CI/CD)
    runs-on: ubuntu-latest
    
    # C·∫ßn quy·ªÅn 'contents: write' ƒë·ªÉ c√≥ th·ªÉ commit l·∫°i file k8s-manifests/kustomization.yaml
    # C·∫ßn quy·ªÅn 'packages: write' ƒë·ªÉ push image l√™n GHCR
    permissions:
      contents: write
      packages: write

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4
        # C·∫ßn fetch history ƒë·ªÉ c√≥ th·ªÉ push commit m·ªõi (c·∫≠p nh·∫≠t manifest)
        with:
          fetch-depth: 0

      # ====================================================================
      # 1. CI - Build & Test
      # ====================================================================

      - name: ‚öôÔ∏è Setup Java ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'

      - name: üì¶ Build Spring Boot App (Maven)
        # S·ª≠ d·ª•ng Maven Wrapper ƒë·ªÉ ƒë·∫£m b·∫£o t√≠nh di ƒë·ªông
        run: ./mvnw clean package -DskipTests
        # Lo·∫°i b·ªè -DskipTests n·∫øu b·∫°n mu·ªën ch·∫°y Unit Test trong CI

      # ====================================================================
      # 2. CI - Build & Push Docker Image
      # ====================================================================

      - name: üèóÔ∏è Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          # S·ª≠ d·ª•ng GITHUB_TOKEN m·∫∑c ƒë·ªãnh cho GHCR
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Set image tag
        id: image_tag
        # G·∫Øn tag b·∫±ng 7 k√Ω t·ª± ƒë·∫ßu ti√™n c·ªßa Git SHA (unique identifier)
        run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: üöÄ Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          # G·∫Øn 2 tag: 'latest' (cho ti·ªán l·ª£i) v√† SHA (cho GitOps)
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.image_tag.outputs.TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ====================================================================
      # 3. CD - C·∫≠p nh·∫≠t Manifest (GitOps Trigger)
      # ====================================================================

      - name: üíæ Update Kustomize Manifests with new image tag
        run: |
          NEW_TAG=${{ steps.image_tag.outputs.TAG }}
          FULL_IMAGE_PATH=${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          
          echo "B·∫Øt ƒë·∫ßu c·∫≠p nh·∫≠t tag $NEW_TAG trong k8s-manifests/kustomization.yaml"

          # 1. C√†i ƒë·∫∑t Kustomize
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
          
          # 2. Thay th·∫ø image tag trong kustomization.yaml
          ./kustomize edit set image $FULL_IMAGE_PATH:$NEW_TAG -d k8s-manifests
          
          # 3. C·∫•u h√¨nh Git user (b·∫Øt bu·ªôc cho commit)
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          
          # 4. Commit v√† Push thay ƒë·ªïi manifest
          git add k8s-manifests/kustomization.yaml
          git commit -m "chore(ci): Update image tag to $NEW_TAG for GitOps [skip ci]"
          # [skip ci] r·∫•t quan tr·ªçng ƒë·ªÉ ngƒÉn GitHub Actions t·ª± k√≠ch ho·∫°t l·∫°i pipeline n√†y
          
          # S·ª≠ d·ª•ng GITHUB_TOKEN m·∫∑c ƒë·ªãnh ƒë·ªÉ push
          git push